<h1 class="text-center mt-5 title">4: "You are tasked to write a checker that validates the parentheses of LISP code. Write a program which takes in a string as an input and returns
    true if all the parentheses in the string are properly closed and nested."</h1>
<br>
<form action="/part2" method="POST">
    <textarea rows="4" cols="150" name="string"></textarea>
    <br>
    <button type="submit" class="btn btn-success">Submit</button>
</form>
<h1 class="text-center title">{{{result}}}</h1>
<p class="text-center p mb-5"> Enter into the form any string and press submit. It will submit a post request then display true or false based on the balance of parentheses. This is one function
    inside the script file named Act3.js that loops through an array from the given string and sends it through of if statements to narrow it done to if our parentheses are close and nested
    correctly. Try for yourself above.
    </p>

<h1 class="text-center mt-5 title">5: "For frontend engineer: Healthcare providers request to be part of the Availity system. Using React framework, create a registration user interface
    so healthcare providers can eletronically join Availity. The following data points should be collected: First and Last name, NPI number, Buiness Address, Telephone Number, and 
    Email address"</h1>
<br>
<p class="text-center p mb-5">I created a registration form for Availity made completely out of React.js. It takes in 5 inputs from the user, Full name, NPI number, Buisness Address, 
    Telephone number, and email address. When you press submit it console logs the values inside the browser. Inside the handleChange component is where a post request would go using axios, to create an
    auth system. I placed it the code inside a folder called React inside the script folder. Here is the link to the current <a href="https://github.com/dderrickmatheww/FullstackHWAssignment">repo</a>. 
    I also created a seperate repo <a href="https://github.com/dderrickmatheww/ReactLoginForm">here</a> for the react code exclusivly.
    </p>

<h1 class="text-center mt-5 title">6: "Availity receives enrollment files from various benefits management and enrollment solutions (I.e. HR platforms, payroll platforms).  Most of these files are
typically in EDI format.  However, there are some files in CSV format.  For the files in CSV format, write a program that will read the content of the file and separate enrollees by
insurance company in its own file. Additionally, sort the contents of each file by last and first name (ascending).  Lastly, if there are duplicate User Ids for the same Insurance
Company, then only the record with the highest version should be included. The following data points are included in the file: User ID, Full name, Version, and Insurance Company"</h1>
<br>
<p class="text-center p mb-5">I created a node.js application that using file-system to read and write CVS files. Some of functionality was pretty difficult with storing the data inside of
    a database like MongoDB or SQL but I completed it. It is a node.js application of course so it doesn't run in the browser. <a href="https://github.com/dderrickmatheww/FullstackHWAssignment">Here</a> is a link 
    to this repo and inside of assets/script/Act6.js is where the node app is. It is writing to the files inside of the CVS1 folder. Inside the folder are dummy insurance names that I just created 
    from memory. The app needs to be written to from the example.cvs file. If you type the format like the others it submit it into the insurance.cvs and from their it will be read and sent either
    into the insruance name file or create a whole new file. 
    </p>